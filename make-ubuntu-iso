#!/bin/bash

# make-ubuntu-iso v1
# author: walter lapchynski/wxl
# contact: carsrcoffins23@yahoo.com
# license: public domain
# born: 21 sept 2012

### FIXME
# check if first argument is a url
potential_url=$(echo $1 | sed 's|^\(http[s].*://\).*|\1|')
while [ $potential_url != http ]
blah

### FIXME
# make sure we have 1st argument (derivative)
case $1 in
edubuntu)
kubuntu)
lubuntu)
mythbuntu)
ubuntu)
core)
server)
ec2)
studio)
wubi)
xubuntu)
*)
esac

### FIXME
# make sure we have 2nd argument (architecture)
case $2 in
i386)
amd64)
amd64mac
powerpc)
armhf)
armhfomap)
armhfomap4)
*)
esac

### FIXME
# make sure we have 3rd argument (desktop/alternate)
case $3 in
desktop)
	zsync_url="http://cdimage.ubuntu.com/lubuntu/daily-live/current/quantal-desktop-powerpc.iso.zsync";
	iso_filename="quantal-desktop-powerpc.iso"
	md5sums_url="http://cdimage.ubuntu.com/lubuntu/daily-live/current/MD5SUMS";
	;;
alternate)
	zsync_url="http://cdimage.ubuntu.com/lubuntu/daily/current/quantal-alternate-powerpc.iso.zsync";
	iso_filename="quantal-alternate-powerpc.iso"
	md5sums_url="http://cdimage.ubuntu.com/lubuntu/daily/current/MD5SUMS";
	;;
*)
	echo "usage: $0 [alternate|desktop]"
	exit
	;;
esac

### FIXME
# check to see if URL 404s

### FIXME
# variables

# grab the iso
wget $zsync_url -O $iso_filename

# a. grab the MD5SUMS file
# b. get the md5sum of the iso, excluding the filename
# c. find the appropriate md5sum in the MD5SUMS file, excluding the filename
# d. compare 2,3 and report success or failure
wget $md5sums_url
if [ $(md5sum $iso_filename | awk '{print $1}') == $(grep powerpc MD5SUMS | awk '{print $1}') ];
then
	echo "iso passes"
else
	echo "iso fails"
	exit
fi 

# copy the iso the cd 
# if you have more than one cd drive you might want to use df to figure out which specific one to write to
dd if=$iso_filename of=/dev/cdrom

# a. just like in 2b above, get the md5sum of the iso
# b. use a large block size for dd that the isos should always be divisible by to speed up the process
# c. make sure to divide the iso size by the block size for dd's count
# d. using b,c get the md5sum of the cdrom
# e. compare a,d and report sucess or failure
if [ $(md5sum $iso_filename | awk '{print $1}') == $(dd if=/dev/cdrom bs=2048 count=$(ls -l | grep $iso_filename | echo $(awk '{print $5}')/2048 | bc -l) | md5sum) ];
then
	echo "disc passes"
else
	echo "disc fails"
fi
